/*
 * mwf-marked.js: format all posts as markdown.
 *
 * Copyright Â© 2014, Lukas Werling
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
$(function() {
  // Setup marked.
  var renderer = new marked.Renderer();

  // Use <b> and <i> to match the standard mwf tags.
  renderer.strong = function(text) {
    return '<b>' + text + '</b>';
  };

  renderer.em = function(text) {
    return '<i>' + text + '</i>';
  };

  // Fix double linking generated by mwf.
  renderer.link = function(href, title, text) {
    href = href.replace(/.*href=&quot;(.*)&quot;&gt;.*/, "$1");
    return marked.Renderer.prototype.link.call(this, href, title, text);
  };

  // Fix double escaping in code blocks.
  renderer.code = function() {
	var result = marked.Renderer.prototype.code.apply(this, arguments);
	return result.replace(/&amp;/g, '&');
  };

  // Same for inline code.
  renderer.codespan = function(text) {
	text = text.replace(/&amp;/g, '&');
	return marked.Renderer.prototype.codespan.call(this, text);
  };

  marked.setOptions({
    renderer: renderer,
    breaks: true,
  });

  $('.pst, .msg, body[class$=_add] > .frm, body[class$=_edit] > .frm').find('.ccl:nth-child(2)').each(function() {
    var el, text;

    el = $(this);
    text = el.html();

    // Replace mwforum's <br>s with newlines so that paragraph detection works.
    text = text.replace(/<br>/g, '\n');
    // Remove blockquotes as they confuse marked.
    text = text.replace(/<blockquote><p>/g, '\n>');
    text = text.replace(/<\/p><\/blockquote>/g, '\n');
    // Add a newline after the avatar to make sure to start with a paragraph.
    text = text.replace(/(<img class="ava" [^>]+>)/, "$&\n")

    el.html(marked(text));
    el.find('.ava').unwrap();
    el.children(':not(.ava):first').css('margin-top', 0);
  });
});
